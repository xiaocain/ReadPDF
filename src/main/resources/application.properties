# 基本连接是设置
#spring.datasource.url = jdbc:mysql://rm-bp1yn1lit508lah4l.mysql.rds.aliyuncs.com:3306/jctms33?autoReconnect=true&useCompression=true&useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&allowMultiQueries=true
#spring.datasource.username = jctmsusername
#spring.datasource.password = yun2018@jcex
#spring.datasource.driverClassName = com.mysql.jdbc.Driver

db.datasource.ds1.driver-class-name=com.mysql.jdbc.Driver
db.datasource.ds1.url=jdbc:mysql://rm-bp1yn1lit508lah4l.mysql.rds.aliyuncs.com:3306/jctms33?autoReconnect=true&useCompression=true&useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&allowMultiQueries=true
db.datasource.ds1.username=jctmsusername
db.datasource.ds1.password=yun2018@jcex

db.datasource.ds2.driver-class-name=com.microsoft.sqlserver.jdbc.SQLServerDriver
db.datasource.ds2.url=jdbc:sqlserver://115.238.63.132;DatabaseName=jcex20170621
db.datasource.ds2.username=newjcex
db.datasource.ds2.password=jcex@admin

# 配置初始化大小、最小、最大
spring.datasource.initialSize = 20
spring.datasource.minIdle = 20
spring.datasource.maxActive = 200

#超过时间限制是否回收
spring.datasource.removeAbandoned=true
#超过多长时间关闭链接，单位秒
spring.datasource.removeAbandonedTimeout=120
#将当前关闭动作记录到日志
spring.datasource.logAbandoned=true

#连接等待超时的时间，单位毫秒 设置了30天
spring.datasource.maxWait = 2592000

#配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒,这里120秒检测一次
spring.datasource.timeBetweenEvictionRunsMillis = 1800000

#池中的连接空闲30分钟后被回收
spring.datasource.minEvictableIdleTimeMillis = 120000

#用来检测连接是否有效的sql，要求是一个查询语句。
spring.datasource.validationQuery = SELECT 'x'
#指明连接是否被空闲连接回收器(如果有)进行检验.如果检测失败,则连接将被从池中去除.
spring.datasource.testWhileIdle = true
#指明从连接池拿时是否测试，如果检验失败，则从池中去除连接并尝试取出另一个，开启很影响性能，但是不开启可能会触发连接被回收了 还在使用 导致异常，可根据自己项目需求选择是否开启
spring.datasource.testOnBorrow = false
#指明是否在归还到池中前进行检验
spring.datasource.testOnReturn = false

#配置监控统计拦截的filters
spring.datasource.filters = stat


spring.freemarker.checkTemplateLocation=false
#实体类的包路径
mybatis.type-aliases-package=com.jcex.test.pojo
#配置Mapper扫描路径 如果不配置  那么注解sql也一样
#下面的路径仅适用于在Mapper下下一级的路径
#mybatis.mapper-locations=classpath:/Mapper/*.xml
mybatis.mysql.xmlLocation=classpath:/Mapper/mysql/*.xml
mybatis.sqlserver.xmlLocation=classpath:/Mapper/sqlserver/*.xml
#对某个包进行什么级别的输出
logging.level.com.jcex:debug
#日志文件保存目录
logging.path=./log/
#日志文件保留多少天
logging.file.max-history=30
#格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度 %msg：日志消息，%n是换行符
logging.pattern.file=%d{yyyy/MM/dd-HH:mm} [%thread] %-5level %logger- %msg%n
#日志文件最大多少 支持GB MB KB
logging.file.max-size=100MB
